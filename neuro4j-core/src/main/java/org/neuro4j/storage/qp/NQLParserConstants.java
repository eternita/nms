/* Generated By:JavaCC: Do not edit this line. NQLParserConstants.java */
package org.neuro4j.storage.qp;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int NUMBER = 7;
  /** RegularExpression Id. */
  int PIPE = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int SQL = 10;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int DELETE = 12;
  /** RegularExpression Id. */
  int INSERT = 13;
  /** RegularExpression Id. */
  int UPDATE = 14;
  /** RegularExpression Id. */
  int SET_PROPERTY = 15;
  /** RegularExpression Id. */
  int REMOVE_PROPERTY = 16;
  /** RegularExpression Id. */
  int WHERE = 17;
  /** RegularExpression Id. */
  int BEHAVE = 18;
  /** RegularExpression Id. */
  int IGNORE = 19;
  /** RegularExpression Id. */
  int USE_ONLY = 20;
  /** RegularExpression Id. */
  int FILTER = 21;
  /** RegularExpression Id. */
  int LIMIT = 22;
  /** RegularExpression Id. */
  int STRICT = 23;
  /** RegularExpression Id. */
  int PATH = 24;
  /** RegularExpression Id. */
  int LIST = 25;
  /** RegularExpression Id. */
  int OPTIONAL = 26;
  /** RegularExpression Id. */
  int E_LBRACE = 27;
  /** RegularExpression Id. */
  int R_LBRACE = 28;
  /** RegularExpression Id. */
  int F_LBRACE = 29;
  /** RegularExpression Id. */
  int LBRACE = 30;
  /** RegularExpression Id. */
  int RBRACE = 31;
  /** RegularExpression Id. */
  int SUBPATH = 32;
  /** RegularExpression Id. */
  int OR = 33;
  /** RegularExpression Id. */
  int LPAREN = 34;
  /** RegularExpression Id. */
  int RPAREN = 35;
  /** RegularExpression Id. */
  int LIKE = 36;
  /** RegularExpression Id. */
  int NOTEQUAL = 37;
  /** RegularExpression Id. */
  int EQUALS = 38;
  /** RegularExpression Id. */
  int COMMA = 39;
  /** RegularExpression Id. */
  int CONNECTED = 40;
  /** RegularExpression Id. */
  int STRING = 41;
  /** RegularExpression Id. */
  int QUOTED_STRING = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<LETTER>",
    "<DIGIT>",
    "<NUMBER>",
    "<PIPE>",
    "<AND>",
    "<SQL>",
    "<SELECT>",
    "<DELETE>",
    "<INSERT>",
    "<UPDATE>",
    "<SET_PROPERTY>",
    "<REMOVE_PROPERTY>",
    "<WHERE>",
    "<BEHAVE>",
    "<IGNORE>",
    "<USE_ONLY>",
    "<FILTER>",
    "<LIMIT>",
    "<STRICT>",
    "<PATH>",
    "<LIST>",
    "\"?\"",
    "<E_LBRACE>",
    "<R_LBRACE>",
    "<F_LBRACE>",
    "\"[\"",
    "\"]\"",
    "\"/\"",
    "<OR>",
    "\"(\"",
    "\")\"",
    "<LIKE>",
    "\"!=\"",
    "\"=\"",
    "\",\"",
    "<CONNECTED>",
    "<STRING>",
    "<QUOTED_STRING>",
  };

}
